import { MqttClient } from 'mqtt';
export interface Error {
    name: string;
    message: string;
    stack?: string;
}
export interface IMqttContext {
    connectionStatus: string | Error;
    client?: MqttClient | null;
    message?: IMessage;
}
export interface IUseSubscription {
    topic: string | string[];
    client?: MqttClient | null;
    message?: IMessage;
    connectionStatus: string | Error;
}
export interface IMessageStructure {
    [key: string]: string;
}
export interface IMessage {
    topic: string;
    message?: string | IMessageStructure;
}
export declare type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
